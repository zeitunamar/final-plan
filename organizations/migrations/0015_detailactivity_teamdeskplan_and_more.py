# Generated by Django 4.2.10 on 2025-07-25 22:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0014_initiativefeed_strategic_objective'),
    ]

    operations = [
        migrations.CreateModel(
            name='DetailActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100)])),
                ('baseline', models.CharField(blank=True, default='', max_length=255)),
                ('target_type', models.CharField(choices=[('cumulative', 'Cumulative'), ('increasing', 'Increasing'), ('decreasing', 'Decreasing'), ('constant', 'Constant')], default='cumulative', max_length=20)),
                ('q1_target', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Q1 Target (Jul-Sep)')),
                ('q2_target', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Q2 Target (Oct-Dec)')),
                ('q3_target', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Q3 Target (Jan-Mar)')),
                ('q4_target', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Q4 Target (Apr-Jun)')),
                ('annual_target', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('selected_months', models.JSONField(blank=True, null=True)),
                ('selected_quarters', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('main_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detail_activities', to='organizations.mainactivity')),
                ('organization', models.ForeignKey(help_text='The team/desk organization that created this detail activity', on_delete=django.db.models.deletion.CASCADE, related_name='detail_activities', to='organizations.organization')),
            ],
        ),
        migrations.CreateModel(
            name='TeamDeskPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('detail_activities', models.ManyToManyField(blank=True, related_name='team_desk_plans', to='organizations.detailactivity')),
                ('initiatives', models.ManyToManyField(blank=True, related_name='team_desk_plans', to='organizations.strategicinitiative')),
                ('leo_eo_plan', models.ForeignKey(help_text='The approved LEO/EO plan this is based on', on_delete=django.db.models.deletion.CASCADE, related_name='team_desk_plans', to='organizations.plan')),
                ('main_activities', models.ManyToManyField(blank=True, related_name='team_desk_plans', to='organizations.mainactivity')),
                ('objectives', models.ManyToManyField(blank=True, related_name='team_desk_plans', to='organizations.strategicobjective')),
                ('organization', models.ForeignKey(help_text='The organization this team/desk plan belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='team_desk_plans', to='organizations.organization')),
                ('performance_measures', models.ManyToManyField(blank=True, related_name='team_desk_plans', to='organizations.performancemeasure')),
                ('team_desk', models.ForeignKey(help_text='The specific team/desk creating this plan', on_delete=django.db.models.deletion.CASCADE, related_name='desk_plans', to='organizations.organization')),
            ],
        ),
        migrations.AlterField(
            model_name='organizationuser',
            name='role',
            field=models.CharField(choices=[('ADMIN', 'Admin'), ('PLANNER', 'Planner'), ('EVALUATOR', 'Evaluator'), ('TEAM_DESK_PLANNER', 'Team/Desk Planner')], max_length=20),
        ),
        migrations.CreateModel(
            name='TeamDeskPlanReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], max_length=20)),
                ('feedback', models.TextField()),
                ('reviewed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='organizations.teamdeskplan')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_desk_reviews', to='organizations.organizationuser')),
            ],
        ),
    ]
